<?php
/*
 * Анонс #154. Тетрадь в клеточку - 2
 * Задача: у вас есть листочек тетради, он состоит из сетки клеточек N*N. Нектр клетки на листочке уже изрисованы.
 * Вам необходимо вырезать наибольший квадрат, ктр содержит "чистые" клетки.
 * А также необходимо определить кол-во способов, ктр-м можно вырезать наибольший квадрат.
 * Разрезать листочек можно только по границам клеток.
 *
 * Входные данные: Arr - квадратная матрица N*N, состоящая из нулей и единиц (1 - означает, что клетка изрисована, 0 - чистая клетка). N - натуральное число от 1 до 1000.
 * Вывод: X - сторона наибольшего квадрата, ктр можно вырезать.
 * Count - кол-во способов, ктр-м можно вырезать наибольший квадрат.
 *
 *  Пример: see https://tgraph.io/Anons-154-Tetrad-v-kletochku---2-02-01
 *
 * Идея: будем использовать принцип динамического программирования. Нижня правая очка (i,j) добавляет грани квадрата вверх и влево,
 * для предыдущего квадрата с ребром меньше на 1 и из нижней правой точки (i, j). Соответственно необходимо хранить результат с предыдущих значений,
 * и проверять что добавляется по двум граням.
 */
require_once 'functions.php';
$n = 6;
$arr = [
  [1, 0, 0, 0, 0, 1],
  [0, 1, 0, 0, 0, 0],
  [1, 0, 0, 0, 0, 0],
  [0, 0, 1, 0, 0, 0],
  [0, 0, 0, 0, 0, 1],
  [0, 0, 1, 0, 0, 0],
];

printMatrix($arr);
echo '----------------------' . PHP_EOL;

// Тут храним результаты проверок предыдущих квадратов
$d = array_fill(0, $n, array_fill(0, $n, -1));
$result = [
  'max'   => 0,
  'count' => 0
];

for ($i = 0; $i < $n; $i++) {
  for ($j = 0; $j < $n; $j++) {
    if ($arr[$i][$j] === 0) {
      $d[$i][$j] = 1; // минимальный квадрат сам пиксель
      if ($d[$i - 1][$j - 1] === 0) { // предыдущий квадрат с заштрихованными пикселями, можем дальше не проверять просто текущей точке ставим 1
        continue;
      }
      // определяем длину ребра нового квадрата
      $edge = $d[$i-1][$j-1] > -1 ? $d[$i-1][$j-1]+1 : min($i, $j)+1;
      $k = 1;
      while ($k < $edge) { // проверяем что стоит по новым ребрам
        if ($arr[$i - $k][$j] === 0 && $arr[$i][$j - $k] === 0) {
          $k++;
        } else {
          break; // на ребре встретили заштрихованный пиксель, дальше считать нет смысла записываем максимальный квадрат, который получили
        }
        $d[$i][$j] = $k;
        // небольшая ифочка чтобы дать ответ, как этого требует задача
        if ($result['max'] == $k) {
          $result['count']++;
        } elseif ($result['max'] < $k) {
          $result = [
            'max'   => $k,
            'count' => 1
          ];
        }
      }
    } else { // Этот пиксель закрещен, тут ловить нечего
      $d[$i][$j] = 0;
    }
  }
}

printMatrix($d);

print_r($result);
