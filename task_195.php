<?php
/*
 * Анонс #195. Детский праздник
 * Задача: для организации детского праздника необходимо надуть M воздушных шариков.
 * Для этого организаторы позвали N добровольцев, i-й среди которых надувает шарик за Ti минут,
 * однако каждый раз после надувания Zi шариков устает и отдыхает Yi минут.
 *
 * Организаторы хотят узнать, через какое время будут надуты все шарики при наиболее оптимальной работе добровольцев.
 * Примечание: если доброволец надул шарик и должен отдохнуть, но больше шариков ему надувать не придется, то считается,
 * что он закончил работу сразу же после надувания последнего шарика, а не после отдыха.
 *
 * Входные данные: M, N - натуральные числа, где 0<=M<=1000; 1<=N<=20.
 * List - список из N наборов, каждый набор содержит по 3 значения для Ti, Zi, Yi соот-но, где 1<=Ti, Yi<=100; 1<=Zi<=1000.
 *
 * Вывод: минимально возможное время, за которое будут надуты все шарики.
 *
 * Пример:
 *
 * 1. M = 10; N = 3;
 * List = { (T: 1, Z: 2, Y: 3),
       (T: 3, Z: 10, Y: 3),
       (T: 2, Z: 4, Y: 3) }
 * Answer = 8;
 *
 * 2. M = 3; N = 2;
 * List = { (T: 2, Z: 2, Y: 5),
       (T: 1, Z: 1, Y: 10) }
 * Answer = 4;
 */
require_once 'functions.php';
$m1 = 10;
$list1 = [
  ['t' => 1, 'z' => 2,  'y' => 3],
  ['t' => 3, 'z' => 10, 'y' => 3],
  ['t' => 2, 'z' => 4,  'y' => 3],
];

$m2 = 3;
$list2 = [
  ['t' => 2, 'z' => 2, 'y' => 5],
  ['t' => 1, 'z' => 1, 'y' => 10],
];

function task_195(int $m, array $list): int
{
  $time = 0;
  foreach ($list as &$member) {
    $member['status'] = 'puff';
    $member['count'] = 0;
    $member['repeats'] = 0;
  }
  unset($member);

  while ($m !== 0) {
    $time++;
    foreach ($list as &$mem) {
      $mem['repeats']++;
      // Помощник отдыхает и уже закончил отдыхать
      if ($mem['status'] === 'rest' && $mem['repeats'] === $mem['y']) {
        $mem['repeats'] = 0;
        $mem['status'] = 'puff';
      } elseif ($mem['status'] === 'puff' && $mem['repeats'] === $mem['t']) { // помощник надувает шары и закончил еще один шар
        $mem['count']++;
        $mem['repeats'] = 0;
        $m--;
        if ($mem['count'] === $mem['z']) { // пора отсохнуть
          $mem['repeats'] = 0;
          $mem['status'] = 'rest';
          $mem['count'] = 0;
        }
      }
    }
  }
  return $time;
}

echo task_195($m1, $list1) . PHP_EOL;
echo task_195($m2, $list2) . PHP_EOL;