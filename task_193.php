<?php
/*
 * Анонс #193. Барбершоп
 *
 * Задача: в барбершопе работает один мастер. Он тратит на одного клиента ровно 20 минут, а затем сразу переходит к следующему,
 * если в очереди кто-то есть. Если в очереди никого, то ждет след.клиента.
 * В течение дня есть данные о времени прихода клиентов в барбершоп. Также заранее известна степень терпения каждого клиента.
 * Степень показывает, сколько человек может максимально находиться в очереди перед клиентом, чтобы он дождался своей очереди и не ушел раньше.
 * Т.е. если в момент прихода клиента в очереди находится больше людей, чем степень его терпения, то он уходит.
 * Клиент, который уже обслуживается в данный момент, также считается находящимся в очереди.
 *
 * Необходимо для каждого клиента вывести время его выхода из барбершопа.
 * Входные данные: clients (h, m, d) - список с данными клиента, где
 * (h, m, d) - h - часы от 0 до 23, m - минуты от 0 до 59, d - степень терпения клиента (неотрицательное число не более 100).
 *
 * Вывод: вывести время (часы и минуты) выхода каждого клиента из барбершопа.
 *
 * Примечание: если на момент прихода клиента человек в очереди больше, чем степень его терпения, то можно считать,
 * что время его ухода равно времени прихода. Барбершоп работает круглосуточно :)
 *
 * Пример:
 * 1. [ (10, 0, 0), (10, 1, 1), (10, 2, 1) ];
 * Output:10:20; 10:40; 10:02
 *
 * 2. [ (1, 0, 100), (2, 0, 0), (2, 1, 0), (2, 2, 3), (2, 3, 0) ];
 * Output:1:20; 2:20; 2:01; 2:40; 2:03
 *
 */
require_once 'functions.php';

$q1 = [
  [10, 0, 0],
  [10, 1, 1],
  [10, 2, 1]
];

$q2 = [
  [1, 0, 100],
  [2, 0, 0],
  [2, 1, 0],
  [2, 2, 3],
  [2, 3, 0]
];

// смоделирую работу по чесам и реальную очередь
function task_193(array $arr) {
  // будем считать что все значения времени идут друг за другом и сортировка не требуется
  // приведем формат чч:мм к виду количества минут от начала
  foreach ($arr as $key => $row) {
     $arr[$key][3] = $arr[$key][0] * 60 + $arr[$key][1];
  }

  $queue = [];

  // прогоним сутки целиком
  for ($i = 0; $i < 24*60; $i++) {
    if (!empty($queue)) { // в очереди кто-то сидит (в том числе тот кто подстригается)
      $first = $queue[0];
      // закончил стрижку
      if (isset($first[4]) && $first[4] == $i) {
        echo intdiv($i, 60) . ' : ' . $i % 60 . PHP_EOL;
        array_shift($queue); // подстригся и ушел

        if (!empty($queue)) {
          $queue = array_values($queue);
          $queue[0][4] = $i + 20; // посадили следующего на стрижку
        }
      }
    }

    // к барберу пришел следующий клиент
    if ($arr[0][3] == $i) {

      $el = array_shift($arr);
      $arr = array_values($arr);

      if ($el[2] >= count($queue) || empty($queue)) { // очередь большая или можно подождать
        $queue [] = $el;
        if (count($queue) == 1) { // никого в очереди не было, сразу сел на стрижку
            $queue[0][4] = $i + 20;
        }
      } else {
        echo intdiv($i, 60) . ' : ' . $i % 60 . PHP_EOL;
      }
    }
  }
}

task_193($q2);