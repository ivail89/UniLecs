<?php
/*
 * Task 100. Овощная нарезка
 * Задача: вам даны N нарезанных колечек овощей: помидора (П) и огурца (О) разложенных на тарелке.
 * В помидорах и огурцах вы не ограничены, поэтому любое нарезанное колечко может быть как огурцом так и помидором.
 * Вам необходимо посчитать кол-во различных вариантов нарезок разложенных на тарелке.
 * При сравнении тарелку можно поворачивать по кругу.
 *
 * Входные данные: N - кол-во нарезанных колечек, где N больше 0 и меньше 100000
 * Вывод: кол-во различных вариантов нарезок разложенных на тарелке.
 *
 * Пример: N = 3 Answer = 4
 *
 * Алгоритм решания:
 * 1. Получить все перестановки.
 * 2. Разбить на группы с одинаковым количеством О и П
 * 3. В каждой группе сделать несколько поворотов, чтобы определить есть тут аналогичное решение или нет.
 *
 * Решал в лоб, без использования каких либо алгоритмов оптимизации.
 * При желании можно использовать эффект зеркала, тогда не нужно будет крутить всю тарелку, а только ее четрверть.
 * Остальные варинты можно получить отзеркаливанием.
 */

require_once 'functions.php';
$n = 6;

// Получаем ВСЕ перестановки
$var = setsOfBits($n);

// Разбиваем на группы
$groups = array();
foreach ($var as $v) {
  $countTomatos    = substr_count($v, '1');
  $countCucumbers = substr_count($v, '0');
  $groups[$countCucumbers.'_'.$countTomatos][] = $v;
}

$uniqe = array(); // тут будем хранить результаты
// Работаем с каждой группой
foreach ($groups as $index => $group) {
  if (count($group) == 1) {
    $uniqe [] = $group[0];
    continue; // один вариант, других быть не может
  }

  if (preg_match('#(^1_)|(_1$)#', $index)) { // Группа содержит всего один огурец или помидор
    // Когда один элемент отличается от остальных, то вариантов всегда всего один
    $uniqe[] = array_shift($group);
    continue;
  }
  // Изначально считаем, что только первый варинт в группе подходит
  $uniqe[] = $group[0];
  // Проверяем каждую строку
  for ($i = 1; $i < count($group); $i++) {
    // Начинаем крутить каждую строку по очереди смещая по одному символу
    for ($j = 0; $j < strlen($group[$i]); $j++) {
      $tmp = $group[$i][0];
      $group[$i] = substr($group[$i], 1) . $tmp;
      if (in_array($group[$i], $uniqe)) continue 2; // такая сервировка уже есть, можно дальше не проверять
    }
    $uniqe[] = $group[$i]; // Прошли полный круг и такой сервировки не встречали
  }
}

print_r($uniqe);