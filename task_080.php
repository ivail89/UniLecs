<?php
/*
 * Задача 80: Двоичное дерево поиска
 * Дан массив неповторяющихся чисел. Необходимо определить, существует ли такое двоичное дерево поиска,
 * в ктр эта последовательность является путем от корня к какому либо листу.
 *
 * Входные данные: arr - массив неповторящихся чисел, размер массива от 1 до 10000. Значения массива - любые целые числа.
 * Вывод: True - если дерево, соответствующее заданному пути, существует. Иначе False.
 *
 * Пример:
 * 1. arr = [8, 3, 6, 4]; Answer = True
 * 2. arr = [8, 4, 6, 3]; Answer = False
 *
 * Идея: исходя из особенностей динароного дерева поиска, каждый следующий шаг должен сужать границы поиска
 */
include_once ('functions.php');

$arr = [8, 3, 6, 4];
list ($leftMargin, $rightMargin) = [0, $arr[0]]; // Установили границы
for ($i = 0; $i < count($arr) - 1; $i++) {
  list ($root, $next) = [$arr[$i], $arr[$i+1]];
  echo "$leftMargin  $next  $rightMargin" . PHP_EOL;
  if ($next < $leftMargin || $next > $rightMargin) { // вышли за границы ветки по которой идем
    die('Path doesnt exist!');
  }
  // Сужаем границы
  if ($root < $next) $rightMargin = $next;
  if ($root > $next) $leftMargin = $next;
}

echo "Path exist!";