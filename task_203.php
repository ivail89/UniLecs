<?php
/*
 * Анонс #203. Два квадрата
 * Задача: художник изобразил два черных квадрата с одинаковой стороной K на квадратном холсте размера N^2.
 * Квадраты могут пересекаться, касаться и даже совпадать. В какой-то момент он забыл число K.
 *
 * По заданному N и информации о цвете клеток холста, помогите художнику найти левые верхние углы каждого из квадратов и их длину K.
 *
 * Входные данные:
 * Число N (N <= 2000);
 * Символьная матрица NxN, которая содержит следующие символы: "*" или ".". Где "*" - черная клетка, а "." - белая клетка (без кавычек).
 *
 * Выходные данные:
 * число K;
 * Два числа x1 и y1 - левая верхняя точка первого квадрата;
 * Два числа x2 и y2 - левая верхняя точка второго квадрата.
 *
 * Пример 1:
N = 6
......
.###..
.#####
.#####
...###
......

Output: K = 3; T1 = (x1: 2, y1: 2); T2 = (x2: 3, y2: 4).

 * Пример 2:
N = 6
......
....##
.##.##
.##...
......
......

Output: K = 2, T1 = (x1: 3, y1: 2); T2 = (x2: 2, y2: 5).
 */
require_once 'functions.php';

$arr1 = [
  ['.', '.', '.', '.', '.', '.'],
  ['.', '#', '#', '#', '.', '.'],
  ['.', '#', '#', '#', '#', '#'],
  ['.', '#', '#', '#', '#', '#'],
  ['.', '.', '.', '#', '#', '#'],
  ['.', '.', '.', '.', '.', '.']
];

$arr2 = [
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '#', '#'],
  ['.', '.', '#', '#', '#', '#'],
  ['.', '.', '#', '#', '.', '.'],
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.']
];

$arr3 = [
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '#', '#', '.', '.'],
  ['.', '.', '#', '#', '.', '.'],
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.']
];

function task_203(array $arr) : array
{
  $isFirst = true;
  foreach ($arr as $y => $line) {
    foreach ($line as $x => $v) {
      if ($arr[$y][$x] === '#' && $isFirst) {
        $result = [
          'x1' => $x,
          'y1' => $y
        ];
        $isFirst = false;
      } elseif ('#' === $arr[$y][$x] && !$isFirst) {
        list($xx, $yy) = [$x, $y]; // ищем правый нижний угол
      }
    }
  }

  // находим ширину квадрата
  list($kx, $ky, $n, $i, $j) = [0, 0, count($arr), $result['x1'], $result['y1']];
  while ($arr[$result['y1']][$i] !== '.' && $i < $n) {
    $kx++;
    $i++;
  }
  while ($arr[$j][$result['x1']] !== '.' && $j < $n) {
    $ky++;
    $j++;
  }

  $result ['k'] = min($kx, $ky);
  $result += [
    'x2' => $xx - $result['k'] + 1,
    'y2' => $yy - $result['k'] + 1
  ];

  return $result;
}

print_r(task_203($arr1));
print_r(task_203($arr2));
print_r(task_203($arr3));