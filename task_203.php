<?php
/*
 * Анонс #203. Два квадрата
 * Задача: художник изобразил два черных квадрата с одинаковой стороной K на квадратном холсте размера N^2.
 * Квадраты могут пересекаться, касаться и даже совпадать. В какой-то момент он забыл число K.
 *
 * По заданному N и информации о цвете клеток холста, помогите художнику найти левые верхние углы каждого из квадратов и их длину K.
 *
 * Входные данные:
 * Число N (N <= 2000);
 * Символьная матрица NxN, которая содержит следующие символы: "*" или ".". Где "*" - черная клетка, а "." - белая клетка (без кавычек).
 *
 * Выходные данные:
 * число K;
 * Два числа x1 и y1 - левая верхняя точка первого квадрата;
 * Два числа x2 и y2 - левая верхняя точка второго квадрата.
 *
 * Пример 1:
N = 6
......
.###..
.#####
.#####
...###
......

Output: K = 3; T1 = (x1: 2, y1: 2); T2 = (x2: 3, y2: 4).

 * Пример 2:
N = 6
......
....##
.##.##
.##...
......
......

Output: K = 2, T1 = (x1: 3, y1: 2); T2 = (x2: 2, y2: 5).
 */
require_once 'functions.php';

$arr1 = [
  ['.', '.', '.', '.', '.', '.'],
  ['.', '#', '#', '#', '.', '.'],
  ['.', '#', '#', '#', '#', '#'],
  ['.', '#', '#', '#', '#', '#'],
  ['.', '.', '.', '#', '#', '#'],
  ['.', '.', '.', '.', '.', '.']
];

$arr2 = [
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '#', '#'],
  ['.', '.', '#', '#', '#', '#'],
  ['.', '.', '#', '#', '.', '.'],
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.']
];

$arr3 = [
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '#', '#', '.', '.'],
  ['.', '.', '#', '#', '.', '.'],
  ['.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.']
];

function task_203(array $arr) : array
{
  foreach ($arr as $y => $line) {
    foreach ($line as $x => $v) {
      if ($arr[$y][$x] === '#') {
        break 2; // нашли значение верхнего левого угла первого квадрата
      }
    }
  }

  $result = [
    'x1' => $x,
    'y1' => $y
  ];

  // находим ширину квадрата
  $k = 0;
  $n = count($arr);
  while ($arr[$y][$x] !== '.' && $x < $n) {
    $k++;
    $x++;
  }
  $result ['k'] = $k;

  // вырезаем первый найденный квадрат
  $x = $result['x1'];
  for ($j = 0; $j < $k; $j++) {
    for ($i = 0; $i < $k; $i++) {
      $arr[$y + $j][$x + $i] = '.';
    }
  }

  // продолжаем искать второй квадрат, возможные варианты
  // больше ничего не нашли - значит два квадрата лежат друг на друге ничего добавлять не будем (при желании можно дублировать x1 и y1
  // нашли еще один квадрат с такими же сторонами - просто берем его левый верхний угол
  // один квадрат входит в другой, ищем правый нижний угол и от него откладываем величину К по двум осям
  $finded = false;
  for ($j = $y; $j < $n; $j++) {
    for ($i = 0; $i < $n; $i++) {
      if ($arr[$j][$i] === '#') {
        $finded = true;
        list($x, $y) = [$i, $j];
        break 2;
      }
    }
  }

  // проверим самостоятельный квадрат или нет найден
  if ($finded) {
    $full = true;
    for ($j = 0; $j < $k; $j++) {
      for ($i = 0; $i < $k; $i++) {
        if ($arr[$y + $j][$x + $i] !== '#') {
          $full = false;
          break 2;
        }
      }
    }
    if ($full) {
      $result += [
        'x2' => $x,
        'y2' => $y
      ];
    } else {
      for ($y = $n - 1; $y > -1; $y--) {
        for ($x = $n - 1; $x > -1; $x--) {
          if ($arr[$y][$x] === '#') {
            break 2;
          }
        }
      }
      $result += [
        'x2' => $x - $k + 1,
        'y2' => $y - $k + 1
      ];
    }
  }

  return $result;
}

print_r(task_203($arr1));
print_r(task_203($arr2));
print_r(task_203($arr3));