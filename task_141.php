<?php
/*
 * Анонс #141. Math Lottery
 *
 * Задача: математики придумали свою версию лотереи. На лотерейном билете указана прямоугольная числовая матрица N*M,
 * также есть скрытая часть, где указаны координаты ячейки X.
 * Есть четыре возможных выигрышных направления: вверх, вниз, влево и вправо.
 * Направление считается выигрышным, если все числа в этом направлении от ячейки X строго меньше числа в самой ячейке X.
 * Если ячейка X находится на краю матрицы, то вы автоматически имеете выигрышное направление.
 *
 * Необходимо выбрать такой лотерейный билет, ктр имеет максимальное общее кол-во выигрышных направлений
 * для всех возможных игровых ячеек (определить только по исходной матрице, скрытая часть ест-но вам неизвестна).
 *
 * Входные данные: arr - числовая матрицы N*M, эл-ты матрицы - натуральные числа от 1 до 10^3. N,M от 1 до 100.
 *
 * Вывод: вывести общее кол-во выигрышных направлений для заданной таблицы.
 *
 * Пример:
 * [ { 6, 4, 10, 11 },
 * { 2, 9, 9, 3 },
 * { 5, 4, 5, 4 } ]
 *
 * Answer: 25
 *
 * Идея: решение в лоб, перебрать все значения нам не подходит, так как потратит множество ресурсов на поиск максимума на подмножествах.
 * Если смотреть слева направо, то можно за один проход определить текущее значение больше ли всех предыдущих
 * @see countLeftToRight($row)
 * Т.е. нам необходимо пройти слева направо во всех четырех направлениях
 */

require_once 'functions.php';

$arr = [
  [6, 4, 10, 11],
  [2, 9, 9, 3],
  [5, 4, 5, 4]
];

$count = 2 * count($arr) + 2 * count($arr[0]);
foreach ($arr as $key => $row) {
  $count += countLeftToRight($row);
  $count += countLeftToRight(array_reverse($row));
}
foreach ($arr[0] as $k => $value) {
  $col = array_column($arr, $k);
  $count += countLeftToRight($col); // так как возращаем всего один столбец, то функция будет с ним работать аналогично как со строкой
  $count += countLeftToRight(array_reverse($col));
}

echo $count;

function countLeftToRight($row)
{
  $res = 0;
  $max_left = $row[0];
  $cnt = count($row);
  for ($i = 1; $i < $cnt; $i++) {
    if ($max_left < $row[$i]) {
      $max_left = $row[$i];
      $res++;
    }
  }
  return $res;
}